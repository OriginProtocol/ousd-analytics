steps:
- id: 'Decrypt secrets required for deployment'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
    - kms
    - decrypt
    - --ciphertext-file=./eagleproject/app.yaml.enc
    - --plaintext-file=./eagleproject/app.yaml
    - --location=global
    - --keyring=origin
    - --key=cloudbuild

- id: 'Decrypt env required for build'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
    - kms
    - decrypt
    - --ciphertext-file=./eagleproject/.build_env.sh.enc
    - --plaintext-file=./eagleproject/.build_env.sh
    - --location=global
    - --keyring=origin
    - --key=cloudbuild

- id: 'Install requirements, collectstatic, run migrations'
  name: 'python:3.8'
  dir: ./eagleproject
  entrypoint: bash
  args:
    - '-c'
    - |
      source .build_env.sh

      if [[ -z "$ENVKEY" ]]; then
        echo "ENVKEY not set. Cannot continue build!"
        exit 1
      fi

      python3 -m pip install -r requirements.txt && \
      python3 ./manage.py collectstatic --noinput && \
      python3 ./manage.py migrate

- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  dir: ./eagleproject
  entrypoint: gcloud
  args:
    - app
    - deploy
timeout: "1600s"
